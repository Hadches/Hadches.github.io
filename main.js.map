{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/delete-modal/delete-modal.component.css","webpack:///./src/app/delete-modal/delete-modal.component.html","webpack:///./src/app/delete-modal/delete-modal.component.ts","webpack:///./src/app/edit-modal/edit-modal.component.css","webpack:///./src/app/edit-modal/edit-modal.component.html","webpack:///./src/app/edit-modal/edit-modal.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/movie-list/movie-list.component.css","webpack:///./src/app/movie-list/movie-list.component.html","webpack:///./src/app/movie-list/movie-list.component.ts","webpack:///./src/app/pipes/cleanRuntim.pipe.ts","webpack:///./src/app/pipes/onlyEng.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/movie.model.ts","webpack:///./src/services/movies.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"main {\\r\\n    margin-top: 1rem;\\r\\n    width: 80%;\\r\\n    margin: auto;\\r\\n  }\\r\\n  \"","module.exports = \"<app-header></app-header>\\n<main>\\n    <app-movie-list></app-movie-list>\\n</main>\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'HeroloCinema';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MoviesService } from 'src/services/movies.service';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\nimport { MovieListComponent } from './movie-list/movie-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatDialogModule\n  } from \"@angular/material\";\n  import {MatPaginatorModule} from '@angular/material/paginator';\n\nimport { DeleteModalComponent } from './delete-modal/delete-modal.component';\nimport { EditModalComponent } from './edit-modal/edit-modal.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { OnlyEngPipe } from './pipes/onlyEng.pipe';\nimport { CleanRuntimePipe } from './pipes/cleanRuntim.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieListComponent,\n    DeleteModalComponent,\n    OnlyEngPipe,\n    CleanRuntimePipe,\n    EditModalComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatPaginatorModule\n  ],\n  entryComponents: [DeleteModalComponent, EditModalComponent],\n  providers: [\n    MoviesService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 mat-dialog-title>Delete Movie</h2>\\n<mat-dialog-content>Are you sure you want to delete '{{data.movieName}}'?</mat-dialog-content>\\n<mat-dialog-actions>\\n    <button mat-button mat-dialog-close>Exit</button>\\n    <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"deleteMovie()\\\">Yes</button>\\n</mat-dialog-actions>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { MoviesService } from 'src/services/movies.service';\nimport { DeleteDialogData } from 'src/models/DeleteDialogData.model';\n\n@Component({\n  selector: 'app-delete-modal',\n  templateUrl: './delete-modal.component.html',\n  styleUrls: ['./delete-modal.component.css']\n})\nexport class DeleteModalComponent  {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteModalComponent>,\n    @Inject(MAT_DIALOG_DATA)public data: DeleteDialogData, public movieService:MoviesService) {}\n\n  deleteMovie(){\n    this.movieService.deletePost(this.data.id);\n  }\n}\n\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\na.active{\\r\\n    background: blue;\\r\\n}\\r\\n\\r\\n.errors{\\r\\n    font-size: 75%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\n    <h2 *ngIf=\\\"mode == 'edit'\\\" mat-dialog-title>Edit Movie</h2>\\n    <h2 *ngIf=\\\"mode == 'create'\\\" mat-dialog-title>Add Movie</h2>\\n\\n    <form (submit)=\\\"onAddMovie(postForm)\\\" #postForm=\\\"ngForm\\\">\\n        <mat-dialog-content>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" name=\\\"title\\\" [ngModel]=\\\"movie?.Title\\\" required minlength=\\\"2\\\" placeholder=\\\"Movie Title\\\"\\n                    #title=\\\"ngModel\\\">\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\">\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"title.errors.required\\\">Please enter a movie title.</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"movieTite\\\">This movie title is allready exists</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"title.errors.pattern\\\">Only english characters are allowed</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"title.errors.minlength\\\">Title must be at least 2 characters long.</mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" name=\\\"runtime\\\" [ngModel]=\\\"movie?.Runtime\\\" required placeholder=\\\"Runtime in minutes\\\"\\n                    #Runtime=\\\"ngModel\\\">\\n                <div *ngIf=\\\"Runtime.invalid && (Runtime.dirty || Runtime.touched)\\\">\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Runtime.errors.required\\\">Please enter a movie runtime in minutes.</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"runtimeError\\\">Please enter at least one digit [1-9] </mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" pattern='[A-Za-z _.,!\\\"-()?]*' name=\\\"genre\\\" [ngModel]=\\\"movie?.Genre\\\"\\n                    required minlength=\\\"2\\\" placeholder=\\\"Movie Genre\\\" #Genre=\\\"ngModel\\\">\\n                <div *ngIf=\\\"Genre.invalid && (Genre.dirty || Genre.touched)\\\">\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Genre.errors.required\\\">Please enter a movie genre.</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Genre.errors.pattern\\\">Only english characters are allowed</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Genre.errors.minlength\\\">Year must be at least 2 characters long.</mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" pattern='[A-Za-z _.,!\\\"-]*' name=\\\"director\\\" [ngModel]=\\\"movie?.Director\\\"\\n                    required minlength=\\\"2\\\" placeholder=\\\"Movie Director\\\" #Director=\\\"ngModel\\\">\\n                <div *ngIf=\\\"Director.invalid && (Director.dirty || Director.touched)\\\">\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Director.errors.required\\\">Please enter a movie director.</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Director.errors.pattern\\\">Only english characters are allowed</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"Director.errors.minlength\\\">Year must be at least 2 characters\\n                        long.</mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput type=\\\"number\\\" name=\\\"year\\\" [ngModel]=\\\"movie?.Year\\\" required placeholder=\\\"Movie Year\\\"\\n                    #year=\\\"ngModel\\\">\\n                <div *ngIf=\\\"year.invalid && (year.dirty || year.touched)\\\">\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"year.errors.required\\\">Please enter a movie year.</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"maxError\\\">Year can't be above {{currentYear}}</mat-error>\\n                    <mat-error class=\\\"errors\\\" *ngIf=\\\"minError\\\">Year must be at least 1900</mat-error>\\n                </div>\\n            </mat-form-field>\\n            <div *ngIf=\\\"errorReq\\\">\\n                <mat-form-field>\\n                    <mat-error class=\\\"errors\\\" >Something got wrong, try again!</mat-error>\\n\\n                </mat-form-field>\\n            </div>\\n        </mat-dialog-content>\\n        <mat-dialog-actions>\\n            <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"postForm.invalid\\\">Save Movie</button>\\n            <button mat-button mat-dialog-close>Exit</button>\\n        </mat-dialog-actions>\\n    </form>\\n</div>\"","import { Component, OnInit, Inject, OnDestroy, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MoviesService } from 'src/services/movies.service';\nimport { DeleteDialogData } from 'src/models/DeleteDialogData.model';\nimport { Movie } from 'src/models/movie.model';\nimport { Subscription } from 'rxjs';\nimport { NgForm, FormControl, Validators } from \"@angular/forms\";\n\n\n@Component({\n    selector: 'app-edit-modal',\n    templateUrl: './edit-modal.component.html',\n    styleUrls: ['./edit-modal.component.css']\n})\n\nexport class EditModalComponent implements OnInit {\n   \n    mode = 'create';\n    postId: string;\n    movie: Movie;\n    isLoading = false;\n    movies: Movie[] = [];\n    currentYear = new Date().getFullYear();\n    minError = false;\n    maxError = false;\n    poster: string;\n    movieTite: boolean = false;\n    runtimeError = false;\n    genreError = false;\n\n\n    constructor(\n        public dialogRef: MatDialogRef<EditModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: Movie, public movieService: MoviesService) { }\n\n    ngOnInit() {\n        this.movie = this.data[\"movie\"];\n\n        // Checking whether this is a 'create' new movie state or 'edit' movie state\n        if (this.movie.id != \"-1\") {\n            this.mode = 'edit';\n            this.postId = this.movie.id;\n            this.poster = this.movie.Poster;\n            this.isLoading = true;\n\n        } else if (this.movie.id === \"-1\") {\n            this.mode = 'create';\n            this.postId = null;\n        }\n    }\n\n// handle form validation and send request to server \n    onAddMovie(form: NgForm) {\n        let sendReq = this.formValidation(form);\n        if (form.value.title && sendReq) {\n            let title = this.clean(form.value.title);\n            this.movieService.getTitleMovie(title).subscribe(\n                data => {\n                    if (data.Error) {\n                        if (this.mode === 'edit') {\n                            this.movieTite = false;\n                            this.movieService.updateMovie(this.postId, title, form.value.runtime, form.value.genre, form.value.year, this.poster, form.value.director);\n                        }\n                        else {\n                            this.poster = './assets/images/Placeholder.jpg';\n                            this.postId = this.guid();\n                            this.movieService.addMovie(this.postId, title, form.value.runtime, form.value.genre, form.value.year, this.poster, form.value.director);\n                        }\n                        this.movieTite = false;\n                        this.reset(form);\n                    }\n                    else if (data.Title) {\n                        console.log(\"data : \", data);\n                        form.controls['title'].setErrors({ 'incorrect': true });\n                        this.movieTite = true;\n                    }\n                },\n                error => {\n                    //TODO handle error from server\n                })}}\n        \n    // create unique id for new movie\n    guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n\n    // reset all form/modal variables \n    reset(form) {\n        this.isLoading = true;\n        this.maxError = false;\n        this.minError = false;\n        this.runtimeError = false;\n        form.controls['runtime'].setErrors(null);\n        form.controls['year'].setErrors(null);\n        form.controls['title'].setErrors(null);\n        form.resetForm();\n        setTimeout(() => this.dialogRef.close(), 200);\n    }\n\n    // form validation\n    formValidation(form){\n        if (form.invalid) {\n            return false;\n        }\n        if (form.value.year < 1900) {\n            form.controls['year'].setErrors({ 'incorrect': true });\n            this.minError = true;\n            return false;\n        }\n        if (form.value.year > this.currentYear) {\n            form.controls['year'].setErrors({ 'incorrect': true });\n            this.maxError = true;\n            return false;\n        }\n        if (form.value.runtime) {\n            let runtime = this.hasNumber(form.value.runtime);\n            if (runtime == \"\") {\n                form.controls['runtime'].setErrors({ 'incorrect': true });\n                this.runtimeError = true;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // handle title \n    clean(str) {\n        return str.replace(/[^0-9a-z-A-Z ]/g, \"\").replace(/ +/, \" \")\n    }\n\n    // handle runtime \n    hasNumber(myString) {\n        let a = myString.replace(/\\D/g, '');\n        return a;\n    }\n}\n","module.exports = \"*{\\r\\n    bottom: 0;\\r\\n    color:white;\\r\\n    background: black;\\r\\n    height: 2em;\\r\\n    left: 0;\\r\\n    position: relative; \\r\\n    font-size: small;\\r\\n    width:100%;\\r\\n    margin: 0;\\r\\n    vertical-align: middle;\\r\\n    height: 8%;\\r\\n\\r\\n}\\r\\n\\r\\n#footer{\\r\\n    position: inline-block;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nli{\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.spacer{\\r\\n    flex:1 1 auto;\\r\\n}\\r\\n\\r\\n.right{\\r\\n    width: 48%;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.left{\\r\\n    width: 48%;\\r\\n}\\r\\n\\r\\nul li{\\r\\n    display: inline-block;\\r\\n  }\"","module.exports = \"<body>\\n    <div id=\\\"footer\\\">\\n        <ul>\\n            <li class=\\\"left\\\">\\n                Hadars1234@gmail.com\\n            </li>\\n            <span class=\\\"spacer\\\"></span>\\n            <li class=\\\"right\\\">\\n                &copy; All rights reserved\\n            </li>\\n        </ul>\\n    </div>\\n</body>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"* {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    margin: 0;\\r\\n    height: 600px;\\r\\n\\r\\n}\\r\\n\\r\\n.navbar{\\r\\n    color: whitesmoke;\\r\\n}\\r\\n\\r\\n.btn-outline-dark{\\r\\n    color: whitesmoke;\\r\\n    border-color: whitesmoke;\\r\\n    /* border:; */\\r\\n}\\r\\n\\r\\n.btn-outline-dark:hover{\\r\\n    background: #ff4081;\\r\\n    border:white;\\r\\n}\\r\\n\\r\\n#product-overview {\\r\\n    background: url(\\\"/assets/images/movies.jpg\\\");\\r\\n    width: 100%;\\r\\n    height: 506px;\\r\\n    /* height: 564px;\\r\\n     */\\r\\n    /* padding: 10px;   \\r\\n     */\\r\\n    \\r\\n}\\r\\n\\r\\n.header_title{\\r\\n    font-size: x-large;\\r\\n}\\r\\n\\r\\n#product-overview h1 {\\r\\n    color: white;\\r\\n    font-family: 'Trocchi', sans-serif;\\r\\n    background: black;\\r\\n    opacity: 0.69;\\r\\n    display:inline;\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n    font-weight: bold;\\r\\n\\r\\n}\\r\\n\\r\\n.navbar-right {\\r\\n    margin-right: 23px;\\r\\n}\\r\\n\\r\\n.navbar-right > li > a{\\r\\n    color: white importent!;\\r\\n}\\r\\n\\r\\n.create-movie{\\r\\n    color: white;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.main-header {\\r\\n    width: 100%;\\r\\n    background: black;\\r\\n    padding: 8px 16px;\\r\\n}\\r\\n\\r\\n.main-header > div {\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.main-header__brand {\\r\\n    color: #0e4f1f;\\r\\n    text-decoration: none;\\r\\n    font-weight: bold;\\r\\n    font-size: 22px;\\r\\n}\\r\\n\"","module.exports = \"<body>\\n    <header class=\\\"main-header\\\">\\n        <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><i class=\\\"material-icons\\\">\\n                    movie\\n                </i></a>\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n                aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n                <a href=\\\"#about\\\" class=\\\"create-movie\\\" (click)=\\\"onCreate()\\\">Add Movie</a>\\n            </button>\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n                <ul class=\\\"navbar-nav mr-auto\\\">\\n                    <li class=\\\"nav-item active\\\">\\n                        <a class=\\\"nav-link header_title\\\" href=\\\"#\\\">Herolo Cinema <span class=\\\"sr-only\\\">(current)</span></a>\\n                    </li>\\n                   \\n                </ul>\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                    <li><a href=\\\"#about\\\" class=\\\"create-movie\\\" (click)=\\\"onCreate()\\\">Create Movie</a></li>\\n                </ul>\\n                <form class=\\\"form-inline my-2 my-lg-0\\\">\\n                    <input  [(ngModel)]=\\\"search\\\" name=\\\"movie\\\" ngModel class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n                    <button class=\\\"btn btn-outline-dark my-2 my-sm-0\\\" (click)=\\\"onSearch()\\\" type=\\\"submit\\\">Search</button>\\n                </form>\\n            </div>\\n        </nav>\\n    </header>\\n\\n    <main>\\n        <section id=\\\"product-overview\\\">\\n            <h1>All Movies Info In One Place</h1>\\n        </section>\\n    </main>\\n\\n</body>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { EditModalComponent } from '../edit-modal/edit-modal.component';\nimport { Movie } from 'src/models/movie.model';\nimport { NgForm, FormControl, Validators } from \"@angular/forms\";\nimport { MoviesService } from 'src/services/movies.service';\n\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n    movie: Movie = new Movie();\n    search = ' ';\n    constructor(public dialog: MatDialog, private movieService: MoviesService) { }\n\n \n\n    // open edit modal\n    onCreate() {\n        this.movie.id = '-1';\n        this.dialog.open(EditModalComponent, {\n            width: '350px',\n            data: { movie: this.movie }\n        })\n    }\n\n    // initialize the movie list with a new movie list title\n    onSearch() {\n        let name = this.search;\n        this.movieService.getMovies(name);\n        window.scrollTo({\n            top: 500,\n            left: 1000,\n            behavior: 'smooth'\n        });\n        this.search = ' ';\n    }\n}\n","module.exports = \":host {\\r\\n    display: block;\\r\\n    margin-top: 1rem;\\r\\n    margin-bottom: 1rem;\\r\\n  }\\r\\n\\r\\n  body{\\r\\n      height: 100%;\\r\\n      width: 70%;\\r\\n      margin: 0 auto;\\r\\n  }\\r\\n\\r\\n  #title{\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  h1{\\r\\n    color:lightseagreen;\\r\\n    font-family: 'Trocchi'\\r\\n  }\\r\\n\\r\\n  mat-expansion-panel-header{\\r\\n    letter-spacing: 0.5px;\\r\\n    font-weight:bold;\\r\\n  }\\r\\n\\r\\n  .list{\\r\\n    margin-top: 2rem;\\r\\n  }\\r\\n\\r\\n  .poster{\\r\\n    height: 20%;\\r\\n    width: 20%;\\r\\n    float: right;\\r\\n    top: 0;\\r\\n    margin: 0;\\r\\n    /* margin-right: 45px; */\\r\\n  }\\r\\n\\r\\n  .mat-body{\\r\\n    height:100%;\\r\\n  }\\r\\n\\r\\n  .p-param{\\r\\n    width: 75%;\\r\\n    float: left;\\r\\n    left: 0;\\r\\n    text-align: left;\\r\\n  }\\r\\n\\r\\n  mat-expansion-panel{\\r\\n      margin: auto;\\r\\n      text-align: center;\\r\\n  }\\r\\n\\r\\n  .mat-expansion-panel-body {\\r\\n      height: 100%;\\r\\n    background: steelblue;\\r\\n}\\r\\n\\r\\n  .info-text {\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  mat-spinner{\\r\\n      margin: auto;\\r\\n  }\\r\\n\\r\\n  @media only screen and (max-width : 768px) {\\r\\n    body{\\r\\n        height: 100%;\\r\\n        width: 100%;\\r\\n        margin: 0 auto;\\r\\n    }\\r\\n}\\r\\n \"","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n\\n\\n\\n\\n\\n<body>\\n    <mat-accordion multi=\\\"true\\\" *ngIf=\\\"movies?.length > 0 && !isLoading\\\">\\n        <img *ngIf=\\\"notFound && !isLoading\\\" src=\\\"/assets/gif/404.gif\\\">\\n        <h1 id=\\\"title\\\">Movies List -\\n            <small class=\\\"text-muted\\\">{{movieName | titlecase }}</small>\\n        </h1>\\n        <div class=\\\"list\\\">\\n            <mat-expansion-panel *ngFor=\\\"let movie of movies\\\" >\\n                <mat-expansion-panel-header>\\n                  {{movie.Title | titlecase | onlyEng }}\\n                </mat-expansion-panel-header>\\n                <div class=\\\"mat-body\\\">\\n                    <div class=\\\"poster\\\">\\n                        <img *ngIf=\\\"movie.Poster !== undefined\\\" class=\\\"img-thumbnail\\\" src={{movie.Poster}}>\\n                    </div>\\n                    <p class=\\\"p-param\\\">\\n                        <b>Year :</b> {{movie?.Year}}\\n                    </p>\\n                    <p class=\\\"p-param\\\"><b>Runtimr :</b> {{movie?.Runtime | runtimePipe}}</p>\\n                    <p class=\\\"p-param\\\"><b>Genre :</b> {{movie?.Genre}}</p>\\n                    <p class=\\\"p-param\\\"><b>Director :</b> {{movie?.Director}}</p>\\n                </div>\\n                <mat-action-row>\\n                    <a mat-button color=\\\"primary\\\" (click)=\\\"onEdit(movie.id)\\\">EDIT</a>\\n                    <button mat-button color=\\\"warn\\\" data-toggle=\\\"modal\\\" (click)=\\\"onDelete(movie.id, movie.Title)\\\"\\n                        data-target=\\\"#deleteModal\\\">DELETE</button>\\n                </mat-action-row>\\n\\n            </mat-expansion-panel>\\n        </div>\\n    </mat-accordion>\\n   \\n\\n    <p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"movies?.length <= 0  && !isLoading\\\">No movies added, please try search again!</p>\\n</body>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Movie } from 'src/models/movie.model';\nimport { MoviesService } from 'src/services/movies.service';\nimport { MatDialog } from '@angular/material';\nimport { DeleteModalComponent } from '../delete-modal/delete-modal.component';\nimport { EditModalComponent } from '../edit-modal/edit-modal.component';\n\n@Component({\n    selector: 'app-movie-list',\n    templateUrl: './movie-list.component.html',\n    styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit, OnDestroy {\n\n    movies: Movie[] = [];\n    private movieSub: Subscription;\n    private movieNameSub: Subscription;\n    isLoading = false;\n    movieName = \"harry potter\";\n    notFound = false;\n\n    constructor(public movieService: MoviesService, public dialog: MatDialog) { }\n\n    ngOnInit() {\n        // initialize the movie list\n        this.movieService.getMovies(this.movieName);\n        this.isLoading = true;\n\n        // get the movie list\n        this.movieSub = this.movieService.getMoviesUpdateListener()\n            .subscribe((movies: Movie[]) => {\n                this.isLoading = false;\n                this.notFound = false;\n                this.movies = movies;\n            },\n                error => {\n                    this.isLoading = false;\n                    this.notFound = true;\n                }\n            );\n\n        // get the search movie title\n        this.movieNameSub = this.movieService.getMovieSerchedListener()\n            .subscribe((name) => {\n                this.movieName = name;\n            },\n                error => {\n                    this.movieName = 'harry potter';\n                }\n            )\n    }\n\n    // open delete modal\n    onDelete(id: string, movieName: string) {\n        this.dialog.open(DeleteModalComponent, {\n            width: '350px',\n            data: { id: id, movieName: movieName }\n        })\n    }\n\n    // open edit modal\n    onEdit(id: string) {\n        const index = this.movies.findIndex(m => m.id === id);\n        const movie = this.movies[index];\n        this.dialog.open(EditModalComponent, {\n            width: '350px',\n            data: { movie: movie }\n        })\n    }\n\n// unsubscribe from Observable\n    ngOnDestroy() {\n        this.movieSub.unsubscribe();\n        this.movieNameSub.unsubscribe();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'runtimePipe' })\r\nexport class CleanRuntimePipe implements PipeTransform {\r\n    transform(word: string): string {\r\n\r\n        return word ? word.replace(/\\D/g, '') + ' minutes' : word;\r\n        //     if (word == \"\") {\r\n        //         return \"please enter runtime\"\r\n        //     }\r\n        //     else {\r\n        //         word = word.replace(/\\D/g, '');\r\n        //     }\r\n\r\n        //     return word + \" minutes\";\r\n        // }\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'onlyEng' })\r\nexport class OnlyEngPipe implements PipeTransform {\r\n  transform(word: string) :string {\r\n    // return word = word.replace(/[^a-zA-Z ]/g, \"\");\r\n    \r\n   word = word.replace(/[^0-9a-z-A-Z ]/g, \"\").replace(/ +/, \" \");\r\n   \r\n    return word;\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","export class Movie {\r\n    constructor(\r\n        public id: string = null,\r\n        public Title: string = null,\r\n        public Year: number = null,\r\n        public Runtime: string = null,\r\n        public Genre: string = null,\r\n        public Director: string = null,\r\n        public Poster: string = './assets/images/Placeholder.jpg') { }\r\n}","import { Injectable } from '@angular/core';\nimport { Movie } from 'src/models/movie.model';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport 'rxjs/add/operator/map';\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MoviesService {\n\n\n\n\n    asyncEvents$: Observable<any[]>;\n\n    private movies: Movie[] = [];\n    private moviesUpdated = new Subject<Movie[]>();\n    private movieSearched = new Subject<any>();\n    movie: Movie;\n\n    constructor(private http: HttpClient) { }\n\n    getMovies(movieName: any) {\n        movieName = movieName.trim();\n        this.movieSearched.next(movieName);\n         this.http\n            .get<{Search: any}>(\n                \"https://www.omdbapi.com/?type=movie&r=json&s=\" + movieName + \"&page=1&apikey=c60cf6c7\"\n            ).pipe(map((data) => {\n                return data.Search.map(data => {\n                    return {\n                        Year: data.Year,\n                        Title: data.Title,\n                        id: data.imdbID,\n                        Poster: data.Poster\n                    }\n                },\n                )\n            }))\n            .subscribe(\n                movieData => {\n                    if (movieData != null) {\n                        movieData = this.handleMovieList(movieData);\n                        this.movies = movieData;\n                        this.moviesUpdated.next([...this.movies]);\n                    }\n                },\n                error => {\n                    this.movieSearched.next('');\n                    this.movies= [];\n                    this.moviesUpdated.next([...this.movies]);\n                }\n            );\n    }\n\n    getMoviesUpdateListener() {\n        return this.moviesUpdated.asObservable();\n    }\n\n    getMovieSerchedListener() {\n        return this.movieSearched.asObservable();\n    }\n\n\n    deletePost(id: string): any {\n        const updatedMovies = this.movies.filter(movie => movie.id !== id);\n        this.movies = updatedMovies;\n        this.moviesUpdated.next([...this.movies]);\n    }\n\n    getMovie(id: string) {\n        return this.http.get<{ Year: number, Title: string, imdbID: string, Runtime: string, Genre: string, Director: string, Poster: string }>(\"https://www.omdbapi.com/?type=movie&r=json&i=\" + id + \"&apikey=c60cf6c7\");\n    }\n\n    updateMovie(postId: string, title: any, runtime: any, genre: any, year: any, poster: any, director: any): any {\n        const movie = { id: postId, Title: title, Year: year, Runtime: runtime, Genre: genre, Director: director, Poster: poster };\n        const updateMovies = [...this.movies];\n        const oldMovieIndex = updateMovies.findIndex(p => p.id === movie.id);\n        updateMovies[oldMovieIndex] = movie;\n        this.movies = updateMovies;\n        this.moviesUpdated.next([...this.movies]);\n    }\n\n    getTitleMovie(title: any): any {\n        title = title.trim();\n        return this.http.get(\"https://www.omdbapi.com/?type=movie&r=json&t=\" + title + \"&apikey=c60cf6c7\");\n    }\n\n\n    addMovie(postId: string, title: any, runtime: any, genre: any, year: any, poster: string, director: any): any {\n        const movie = { id: postId, Title: title, Year: year, Runtime: runtime, Genre: genre, Director: director, Poster: poster };\n        this.movies.push(movie);\n        this.moviesUpdated.next([...this.movies]);\n    }\n\n    handlePoster(link: any) {\n        link.forEach((keys: any) => {\n            if (keys.Poster == null || keys.Poster == undefined || keys.Poster == '' || keys.Poster == 'N/A') {\n                keys.Poster = \"./assets/images/Placeholder.jpg\";\n            }\n        });\n    }\n\n    handleMovieList(movieList: any) {\n        this.handlePoster(movieList);\n        for (let i in movieList) {\n            this.getMovie(movieList[i].id).subscribe(\n                data => {\n                    movieList[i].Runtime = data.Runtime,\n                        movieList[i].Genre = data.Genre,\n                        movieList[i].Director = data.Director\n                }\n            )\n        }\n        return movieList;\n    }\n}\n"],"sourceRoot":""}